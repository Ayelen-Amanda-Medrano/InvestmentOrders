// <auto-generated />
using System;
using InvestmentOrders.Infrastructure.Orders.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InvestmentOrders.Infrastructure.Migrations
{
    [DbContext(typeof(OrderDbContext))]
    partial class OrderDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("InvestmentOrders.Domain.Entities.Activo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ticker")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TipoActivoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TipoActivoId");

                    b.ToTable("Activos", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Apple",
                            PrecioUnitario = 177.97m,
                            Ticker = "AAPL",
                            TipoActivoId = 1
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Alphabet Inc",
                            PrecioUnitario = 138.21m,
                            Ticker = "GOOGL",
                            TipoActivoId = 1
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Microsoft",
                            PrecioUnitario = 329.04m,
                            Ticker = "MSFT",
                            TipoActivoId = 1
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Coca Cola",
                            PrecioUnitario = 58.3m,
                            Ticker = "KO",
                            TipoActivoId = 1
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Walmart",
                            PrecioUnitario = 163.42m,
                            Ticker = "WMT",
                            TipoActivoId = 1
                        },
                        new
                        {
                            Id = 6,
                            Nombre = "BONOS ARGENTINA USD 2030 L.A",
                            PrecioUnitario = 307.4m,
                            Ticker = "AL30",
                            TipoActivoId = 2
                        },
                        new
                        {
                            Id = 7,
                            Nombre = "Bonos Globales Argentina USD Step Up 2030",
                            PrecioUnitario = 336.1m,
                            Ticker = "GD30",
                            TipoActivoId = 2
                        },
                        new
                        {
                            Id = 8,
                            Nombre = "Delta Pesos Clase A",
                            PrecioUnitario = 0.0181m,
                            Ticker = "Delta.Pesos",
                            TipoActivoId = 3
                        },
                        new
                        {
                            Id = 9,
                            Nombre = "Fima Premium Clase A",
                            PrecioUnitario = 0.0317m,
                            Ticker = "Fima.Premium",
                            TipoActivoId = 3
                        });
                });

            modelBuilder.Entity("InvestmentOrders.Domain.Entities.EstadoOrden", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("EstadoOrdenes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 0,
                            Descripcion = "En Proceso"
                        },
                        new
                        {
                            Id = 1,
                            Descripcion = "Ejecutada"
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Cancelada"
                        });
                });

            modelBuilder.Entity("InvestmentOrders.Domain.Entities.Orden", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CuentaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EstadoId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("MontoTotal")
                        .HasColumnType("TEXT");

                    b.Property<string>("NombreActivo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<char>("Operacion")
                        .HasMaxLength(1)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Precio")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.HasIndex("NombreActivo");

                    b.ToTable("Ordenes", (string)null);
                });

            modelBuilder.Entity("InvestmentOrders.Domain.Entities.TipoActivo", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TiposActivo", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Acción"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Bono"
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "FCI"
                        });
                });

            modelBuilder.Entity("InvestmentOrders.Domain.Entities.Activo", b =>
                {
                    b.HasOne("InvestmentOrders.Domain.Entities.TipoActivo", "TipoActivo")
                        .WithMany()
                        .HasForeignKey("TipoActivoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipoActivo");
                });

            modelBuilder.Entity("InvestmentOrders.Domain.Entities.Orden", b =>
                {
                    b.HasOne("InvestmentOrders.Domain.Entities.EstadoOrden", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InvestmentOrders.Domain.Entities.Activo", "Activo")
                        .WithMany()
                        .HasForeignKey("NombreActivo")
                        .HasPrincipalKey("Nombre")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Activo");

                    b.Navigation("Estado");
                });
#pragma warning restore 612, 618
        }
    }
}
